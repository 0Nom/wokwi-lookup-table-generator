# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies and run some generator tests with demo files
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
        echo Generating ./demos/2bit_and.logic.json...
        python generate.py -f ./demos/2bit_and.logic.json > /dev/null
        
        echo Generating ./demos/2bit_comparator.logic.json...
        python generate.py -f ./demos/2bit_comparator.logic.json > /dev/null
        
        echo Generating ./demos/2bit_full_adder.logic.json...
        python generate.py -f ./demos/2bit_full_adder.logic.json > /dev/null
        
        echo Generating ./demos/2bit_half_adder.logic.json...
        python generate.py -f ./demos/2bit_half_adder.logic.json > /dev/null
        
        echo Generating ./demos/2bit_nand.logic.json...
        python generate.py -f ./demos/2bit_nand.logic.json > /dev/null
        
        echo Generating ./demos/2bit_or.logic.json...
        python generate.py -f ./demos/2bit_or.logic.json > /dev/null
        
        # Generating the following demo file will definitely enter an endless loop.
        # echo Generating ./demos/4bit_popcount.logic.json...
        # python generate.py -f ./demos/4bit_popcount.logic.json > /dev/null
        
        echo Generating ./demos/bcd_7segment_lut.logic.json...
        python generate.py -f ./demos/bcd_7segment_lut.logic.json > /dev/null
        
        echo Generating ./demos/limited-ascii_7segment_lut.logic.json...
        python generate.py -f ./demos/limited-ascii_7segment_lut.logic.json > /dev/null
